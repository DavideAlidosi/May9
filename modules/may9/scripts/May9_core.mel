print "May9 console: Source May9_core.mel \n";

// Store May9 Version
string $may9Version = "May9 Next.2.4";
string $may9SecondLine = "Happy BDay Man!";
int $may9Value = "10241";

// Inizialize DAG Menu Procedure
catchQuiet(dagMenuProc("", ""));

// Inizialize Break Connections
channelBoxCommand -break;

// Inizialize Main Create Menu
ModCreateMenu mainCreateMenu;

// Inizialize Main Skeletons Menu in Maya 2019
if (`about -api` >= 20190000){
	source ChaSkeletonsMenu;
}

// Inizialize Crease Set Editor
python "from maya.app.general import creaseSetEditor";

// Inizialize Cache Playback Preferences in Maya 2019
if (`about -api` >= 20190000){
	python "from maya.plugin.evaluator.cache_preferences import CachePreferenceEnabled";
}

if (`about -api` >= 20190100){
	python "from maya.plugin.evaluator.cache_optionvar_states import CachePreferenceCacheSmoothMeshes";
}

if (`about -api` >= 20200000){
	python "from maya.plugin.evaluator.cache_preferences import CachePreferenceDynamicsSupportEnabled";
}


// Source main scripts
source May9_scripts.mel;

// Source Marking Menues
source May9_MMs.mel;

// Source hotkeys
source May9_hotkeys.mel;

// Run May9 Next main menu
evalDeferred ("da_May9Menu");

// Run Mouse Over MM
da_MouseOver_MM_May9;

// Define Anti Alias Options startup
if(`optionVar -q da_AntiAliasEnable`){
    scriptJob -e "NewSceneOpened" da_AntiAlias;
    da_AntiAlias;
}

// Define Arnold Options startup
da_AiOptions;
scriptJob -e "SceneOpened" da_AiOptions;

// Clear and enable Undo queue
da_UndoClear;
scriptJob -e "SceneOpened" da_UndoClear;

// Refresh May9 Next main menu
scriptJob -e "SceneOpened" da_May9MenuRefresh;

// Define layout state startup
string $myLayoutReset = "int $myLayout = 0";
scriptJob -e "SceneOpened" $myLayoutReset;

print "May9 console: Complete standard procedures \n";

// Define installer preference
if (`optionVar -q "May9ActivationCheck"` < 1){

    //Source userPrefs only at first May9 initialization
    source May9_layouts.mel;

    // Enable Membrane Paintable Attributes
	makePaintable  -at "doubleArray" "membrane" "weightPerVertex";

	print "May9 console: First-time initialization \n";
}

if (`optionVar -q "May9ActivationCheck"` < 10000){

	// Store initial hyperShadeDockingLayout
	optionVar -sv da_hyperShadeDockingLayout `optionVar -q hyperShadeDockingLayout`;

	// Set hyperShadeDockingLayout
	optionVar -sv "hyperShadeDockingLayout" "000000ff00000000fd0000000200000001000001bd00000372fc0200000002fc0000000000000163000000a501000011fa000000000100000003fb00000024004c006f006f006b00640065007600430072006500610074006500500061006e0065006c0100000000ffffffff000000b500fffffffb00000020004c006f006f006b00640065007600420069006e007300500061006e0065006c0100000000ffffffff0000005600fffffffb0000002c004c006f006f006b00640065007600530068006100640065007200620061006c006c00500061006e0065006c010000042c000001940000004600fffffffb00000028004c006f006f006b00640065007600500072006f0070006500720074007900500061006e0065006c010000016900000209000000f100ffffff000000020000043800000110fc0100000001fb00000026004c006f006f006b00640065007600420072006f007700730065007200500061006e0065006c0100000000000004380000008700ffffff000004380000025c00000004000000020000000800000002fc00000000";

	// Set initial Anti Alias prefs
	optionVar -iv "da_AntiAliasEnable" 0;

	// Store initial Connection Editor prefs
	optionVar -iv da_connectWindowLeftSHD `optionVar -q connectWindowLeftSHD`;
	optionVar -iv da_connectWindowRightSHD `optionVar -q connectWindowRightSHD`;

	// Set Connection Editor prefs
	optionVar -iv "connectWindowLeftSHD" 1 -iv "connectWindowRightSHD" 1;

	// Store initial Use Scene Panel Config
	optionVar -iv da_useScenePanelConfig `optionVar -q useScenePanelConfig`;

	// Disable Use Scene Panel Config
	$gUseScenePanelConfig = 0;

	// Store initial Duplicate Variable Warnings
	optionVar -iv da_DuplicateVariableWarnings `optionVar -q melDuplicateVariableWarnings`;

	// Disable Duplicate Variable Warnings
	melOptions -duplicateVariableWarnings off;

	// Declare initial layout state
	global int $myLayout = 0;

	print "May9 console: Initialized installer preference \n";
}

// Complete installation or update release
if (`optionVar -q "May9ActivationCheck"` < $may9Value){

	// Store initial renderSequenceAllCameras
	optionVar -iv da_renderSequenceAllCameras `optionVar -q renderSequenceAllCameras`;

	// Set renderSequenceAllCameras
	optionVar -iv "renderSequenceAllCameras" 1;

	// Define May9 Next installation status 
	optionVar -iv May9ActivationCheck $may9Value;

	// Source userRuntime
	source May9_userRuntime.mel;

	// Run Runtime Commands procedure
	May9_runTimeCommands;

	// Run May9 Next Hotkey Set
	da_May9HotkeySet;

	// Store Preferences Changes
	savePrefs -g -hk;

	// Maya 2018 Plug-in Update Initialization Fix
	if (`about -api` >= 20180000 && `about -api` < 20190000){
		if ( !`pluginInfo -q -l May9_Next` ){
			// Load May9 Plug-in
			loadPlugin May9_Next;

		print "May9 console: Fix Maya 2018 updater bug \n";
		}
	}

	print "May9 console: Complete initialization or update of May9 Next \n";
}

print "May9 console: Complete initialization of May9 Next \n";